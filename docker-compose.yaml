version: "3.9"

services:
  auth_service:
    container_name: auth_service
    build:
      dockerfile: Dockerfile
      target: app
    ports:
      - ${GRPC_PORT}:${GRPC_PORT}
      - ${HTTP_PORT}:${HTTP_PORT}
    networks:
      - service
      - dev
    depends_on:
      - auth_service_migration
      - auth_service_db
      - mailpit
      - rabbitmq

  auth_service_migration:
    container_name: auth_service_migration
    restart: on-failure
    build:
      dockerfile: Dockerfile
      target: app
    command:
      [
        "sh",
        "-c",
        'migrate -source file://migrations -database "postgresql://test:test@auth_db:5432/auth?sslmode=disable" up',
      ]
    depends_on:
      - auth_service_db
    networks:
      - service
      - dev

  auth_service_db:
    image: "postgres:latest"
    container_name: auth_service_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - service
      - dev

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.10.7-management
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASS}
    ports:
      - 15672:15672
      - ${RABBIT_PORT}:${RABBIT_PORT}
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    networks:
      - service
      - dev

  mailpit:
    container_name: mailpit
    image: 'axllent/mailpit:latest'
    ports:
      - '${FORWARD_MAILPIT_PORT:-1025}:1025'
      - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
    networks:
      - service
      - dev

networks:
  service:
  dev:
    external: true
